package zw.co.tinysolutions.model;
// Generated Sep 2, 2017 2:22:32 PM by Hibernate Tools 4.3.1

import java.util.logging.Logger;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlRootElement;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * SysUserTypes generated by hbm2java
 */
@Entity
@Table(name = "sys_user_types",
        uniqueConstraints = @UniqueConstraint(columnNames = {"user_type_id","fk_connected_system"})
)
@JsonIgnoreProperties(ignoreUnknown = true)
@XmlRootElement
public class SysUserTypes implements java.io.Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger LOG = Logger.getLogger(SysUserTypes.class.getName());
    private Integer id;
    private String userTypeId;
    private String typeDescription;
    private boolean status=true;
    private SysConnectedSystems sysConnectedSystems;

    public SysUserTypes() {
    }

    public SysUserTypes(String userTypeId, boolean status) {
        this.userTypeId = userTypeId;
        this.status = status;
    }

    public SysUserTypes(String userTypeId, String typeDescription, boolean status) {
        this.userTypeId = userTypeId;
        this.typeDescription = typeDescription;
        this.status = status;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "user_type_id", unique = true, nullable = false, length = 10)
    public String getUserTypeId() {
        return this.userTypeId;
    }

    public void setUserTypeId(String userTypeId) {
        this.userTypeId = userTypeId;
    }

    @Column(name = "type_description", length = 50)
    public String getTypeDescription() {
        return this.typeDescription;
    }

    public void setTypeDescription(String typeDescription) {
        this.typeDescription = typeDescription;
    }

    @Column(name = "status", nullable = false)
    public boolean isStatus() {
        return this.status;
    }

    public void setStatus(boolean status) {
        this.status = status;
    }
    
     /**
     * @return the sysConnectedSystems
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fk_connected_system")
    public SysConnectedSystems getSysConnectedSystems() {
        return sysConnectedSystems;
    }

    /**
     * @param sysConnectedSystems the sysConnectedSystems to set
     */
    public void setSysConnectedSystems(SysConnectedSystems sysConnectedSystems) {
        this.sysConnectedSystems = sysConnectedSystems;
    }

    
}
